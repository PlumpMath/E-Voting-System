
// This file has been generated by the GUI designer. Do not modify.
namespace VotingMultiChain
{
	public partial class MainStationWindow
	{
		private global::Gtk.VBox container;
		
		private global::Gtk.VBox tallyingVotes;
		
		private global::Gtk.Notebook outputContainer;
		
		private global::Gtk.Table displayContainer;
		
		private global::Gtk.Label candidateNames;
		
		private global::Gtk.Label candidateResults;
		
		private global::Gtk.Label percentageResults;
		
		private global::Gtk.Table timeContainer;
		
		private global::Gtk.Label timeLabel;
		
		private global::Gtk.Label tallyVote;
		
		private global::Gtk.Label auditResults;
		
		private global::Gtk.Label audit;
		
		private global::Gtk.Button auditButton;
		
		private global::Gtk.Button countVote;
		
		private global::Gtk.Button logOutButton;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget VotingMultiChain.MainStationWindow
			this.Name = "VotingMultiChain.MainStationWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("MainStationWindow");
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.BorderWidth = ((uint)(10));
			// Container child VotingMultiChain.MainStationWindow.Gtk.Container+ContainerChild
			this.container = new global::Gtk.VBox ();
			this.container.Name = "container";
			this.container.Spacing = 6;
			// Container child container.Gtk.Box+BoxChild
			this.tallyingVotes = new global::Gtk.VBox ();
			this.tallyingVotes.Name = "tallyingVotes";
			this.tallyingVotes.Spacing = 6;
			// Container child tallyingVotes.Gtk.Box+BoxChild
			this.outputContainer = new global::Gtk.Notebook ();
			this.outputContainer.CanFocus = true;
			this.outputContainer.Name = "outputContainer";
			this.outputContainer.CurrentPage = 1;
			// Container child outputContainer.Gtk.Notebook+NotebookChild
			this.displayContainer = new global::Gtk.Table (((uint)(2)), ((uint)(3)), false);
			this.displayContainer.Name = "displayContainer";
			this.displayContainer.RowSpacing = ((uint)(6));
			this.displayContainer.ColumnSpacing = ((uint)(6));
			this.displayContainer.BorderWidth = ((uint)(6));
			// Container child displayContainer.Gtk.Table+TableChild
			this.candidateNames = new global::Gtk.Label ();
			this.candidateNames.Name = "candidateNames";
			this.candidateNames.Xalign = 0F;
			this.displayContainer.Add (this.candidateNames);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.displayContainer [this.candidateNames]));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child displayContainer.Gtk.Table+TableChild
			this.candidateResults = new global::Gtk.Label ();
			this.candidateResults.Name = "candidateResults";
			this.candidateResults.Justify = ((global::Gtk.Justification)(2));
			this.displayContainer.Add (this.candidateResults);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.displayContainer [this.candidateResults]));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child displayContainer.Gtk.Table+TableChild
			this.percentageResults = new global::Gtk.Label ();
			this.percentageResults.Name = "percentageResults";
			this.percentageResults.Justify = ((global::Gtk.Justification)(2));
			this.displayContainer.Add (this.percentageResults);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.displayContainer [this.percentageResults]));
			w3.LeftAttach = ((uint)(2));
			w3.RightAttach = ((uint)(3));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child displayContainer.Gtk.Table+TableChild
			this.timeContainer = new global::Gtk.Table (((uint)(1)), ((uint)(1)), false);
			this.timeContainer.Name = "timeContainer";
			this.timeContainer.RowSpacing = ((uint)(6));
			this.timeContainer.ColumnSpacing = ((uint)(6));
			// Container child timeContainer.Gtk.Table+TableChild
			this.timeLabel = new global::Gtk.Label ();
			this.timeLabel.Name = "timeLabel";
			this.timeLabel.Xalign = 1F;
			this.timeLabel.Justify = ((global::Gtk.Justification)(2));
			this.timeContainer.Add (this.timeLabel);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.timeContainer [this.timeLabel]));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			this.displayContainer.Add (this.timeContainer);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.displayContainer [this.timeContainer]));
			w5.TopAttach = ((uint)(1));
			w5.BottomAttach = ((uint)(2));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			this.outputContainer.Add (this.displayContainer);
			// Notebook tab
			this.tallyVote = new global::Gtk.Label ();
			this.tallyVote.Name = "tallyVote";
			this.tallyVote.LabelProp = global::Mono.Unix.Catalog.GetString ("Tallying Votes");
			this.outputContainer.SetTabLabel (this.displayContainer, this.tallyVote);
			this.tallyVote.ShowAll ();
			// Container child outputContainer.Gtk.Notebook+NotebookChild
			this.auditResults = new global::Gtk.Label ();
			this.auditResults.Name = "auditResults";
			this.auditResults.Xalign = 0F;
			this.outputContainer.Add (this.auditResults);
			global::Gtk.Notebook.NotebookChild w7 = ((global::Gtk.Notebook.NotebookChild)(this.outputContainer [this.auditResults]));
			w7.Position = 1;
			// Notebook tab
			this.audit = new global::Gtk.Label ();
			this.audit.Name = "audit";
			this.audit.LabelProp = global::Mono.Unix.Catalog.GetString ("Auditing");
			this.outputContainer.SetTabLabel (this.auditResults, this.audit);
			this.audit.ShowAll ();
			this.tallyingVotes.Add (this.outputContainer);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.tallyingVotes [this.outputContainer]));
			w8.Position = 0;
			w8.Expand = false;
			w8.Fill = false;
			// Container child tallyingVotes.Gtk.Box+BoxChild
			this.auditButton = new global::Gtk.Button ();
			this.auditButton.CanFocus = true;
			this.auditButton.Name = "auditButton";
			this.auditButton.UseUnderline = true;
			this.auditButton.Label = global::Mono.Unix.Catalog.GetString ("Audit");
			this.tallyingVotes.Add (this.auditButton);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.tallyingVotes [this.auditButton]));
			w9.Position = 1;
			w9.Expand = false;
			w9.Fill = false;
			this.container.Add (this.tallyingVotes);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.container [this.tallyingVotes]));
			w10.Position = 0;
			w10.Expand = false;
			w10.Fill = false;
			// Container child container.Gtk.Box+BoxChild
			this.countVote = new global::Gtk.Button ();
			this.countVote.CanFocus = true;
			this.countVote.Name = "countVote";
			this.countVote.UseUnderline = true;
			this.countVote.Label = global::Mono.Unix.Catalog.GetString ("Counting Votes");
			this.container.Add (this.countVote);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.container [this.countVote]));
			w11.Position = 1;
			w11.Expand = false;
			w11.Fill = false;
			// Container child container.Gtk.Box+BoxChild
			this.logOutButton = new global::Gtk.Button ();
			this.logOutButton.CanFocus = true;
			this.logOutButton.Name = "logOutButton";
			this.logOutButton.UseUnderline = true;
			this.logOutButton.Label = global::Mono.Unix.Catalog.GetString ("Log Out");
			this.container.Add (this.logOutButton);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.container [this.logOutButton]));
			w12.Position = 2;
			w12.Expand = false;
			w12.Fill = false;
			this.Add (this.container);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 400;
			this.DefaultHeight = 300;
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.auditButton.Clicked += new global::System.EventHandler (this.OnAuditButtonClicked);
			this.countVote.Clicked += new global::System.EventHandler (this.OnCountingVoteClicked);
			this.logOutButton.Clicked += new global::System.EventHandler (this.OnLogOutButtonClicked);
		}
	}
}
